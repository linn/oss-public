<ResourceDictionary 
  x:Class="KinskyDesktopWpf.ControlStyles"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:kd="clr-namespace:KinskyDesktopWpf" 
  xmlns:s="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Shared.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeThickness="0.5"
                               Stroke="#DDD"
                               StrokeDashArray="1 1"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    

    <Style x:Key="PopupFrame" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <Canvas x:Name="arrowCanvas" DockPanel.Dock="Top" Width="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type HeaderedContentControl}}, Path=ActualWidth}" Height="12">
                            <Path x:Name="arrow" Data="M 0 12 L 24 12 L 12 0 Z" Fill="{DynamicResource PopupBorderBrush}" StrokeThickness="0.5" Width="24" Height="12" />
                        </Canvas>
                        <Border x:Name="contentBorder" DockPanel.Dock="Bottom" BorderBrush="{DynamicResource PopupBorderBrush}" CornerRadius="10" BorderThickness="1" Background="Transparent">
                            <Grid ClipToBounds="True">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="40" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border BorderBrush="Transparent" CornerRadius="6,6,0,0" Grid.Row="0" BorderThickness="0" Background="{DynamicResource PopupHeaderBrush}">
                                    <ContentPresenter ContentSource="Header"/>
                                </Border>
                                <Border BorderBrush="{DynamicResource BackgroundBrush}" Background="{DynamicResource BackgroundBrush}" Grid.Row="1" CornerRadius="0,0,10,10" BorderThickness="0">
                                    <ContentPresenter ContentSource="Content" Margin="0,0,0,1"/>
                                </Border>
                            </Grid>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="kd:PopupExtensions.HorizontalPlacement" Value="{x:Static Dock.Left}">
                            <Setter TargetName="arrow" Property="Canvas.Right" Value="15" />
                        </Trigger>
                        <Trigger Property="kd:PopupExtensions.HorizontalPlacement" Value="{x:Static Dock.Right}">
                            <Setter TargetName="arrow" Property="Canvas.Left" Value="15" />
                        </Trigger>
                        <Trigger Property="kd:PopupExtensions.VerticalPlacement" Value="{x:Static Dock.Top}">
                            <Setter TargetName="arrowCanvas" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="contentBorder" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform CenterX="0.0" CenterY="0.5" Angle="180" />
                                        <TranslateTransform Y="10" />
                                        <TranslateTransform X="30" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="kd:PopupExtensions.VerticalPlacement" Value="{x:Static Dock.Top}"/>
                                <Condition Property="kd:PopupExtensions.HorizontalPlacement" Value="{x:Static Dock.Right}"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="arrowCanvas" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="contentBorder" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform CenterX="0.0" CenterY="0.5" Angle="180" />
                                        <TranslateTransform Y="10" />
                                        <TranslateTransform X="30" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HiddenContentButton" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter Name="content"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HiddenContentToggleButton" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <ContentPresenter Name="content"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HiddenContentRepeatButton" TargetType="RepeatButton">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <ContentPresenter Name="content"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid SnapsToDevicePixels="True" HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="4" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="28" />
                        </Grid.RowDefinitions>
                        <Image x:Name="imgLeft" Grid.Column="0" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceBoxLeft}}" Stretch="Fill" Opacity="{TemplateBinding kd:FrameworkElementExtensions.BackgroundOpacity}" />
                        <Image x:Name="imgLeftOver" Grid.Column="0" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceBoxOverLeft}}" Stretch="Fill" Opacity="0" />
                        <Image x:Name="imgFiller" Grid.Column="1" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceBoxFiller}}" Stretch="Fill" Width="{Binding ElementName=content, Path=ActualWidth}" Opacity="{TemplateBinding kd:FrameworkElementExtensions.BackgroundOpacity}"  />
                        <Image x:Name="imgFillerOver" Grid.Column="1" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceBoxOverFiller}}" Stretch="Fill" Opacity="0" Width="{Binding ElementName=content, Path=ActualWidth}" />
                        <ContentPresenter Grid.Column="1" x:Name="content" HorizontalAlignment="Center" />
                        <Image x:Name="imgRight" Grid.Column="2" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceBoxRight}}" Stretch="Fill" Opacity="{TemplateBinding kd:FrameworkElementExtensions.BackgroundOpacity}" />
                        <Image x:Name="imgRightOver" Grid.Column="2" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceBoxOverRight}}" Stretch="Fill" Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Name="mouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgLeft" 
                                            To="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgLeftOver" 
                                            To="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgFiller" 
                                            To="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgFillerOver" 
                                            To="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgRight" 
                                            To="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgRightOver" 
                                            To="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgLeft" 
                                            From="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgLeftOver" 
                                            From="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgFiller" 
                                            From="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgFillerOver" 
                                            From="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgRight" 
                                            From="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgRightOver" 
                                            From="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=IsEnabled}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=IsPressed}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="imgLeftOver"  Property="Source" Value="{Binding Source={x:Static kd:StaticImages.ImageSourceBoxDownLeft}}" />
                            <Setter TargetName="imgFillerOver"  Property="Source" Value="{Binding Source={x:Static kd:StaticImages.ImageSourceBoxDownFiller}}" />
                            <Setter TargetName="imgRightOver"  Property="Source" Value="{Binding Source={x:Static kd:StaticImages.ImageSourceBoxDownRight}}" />
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="kd:DragHelper.IsDraggedOver" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Name="dragOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgLeft" 
                                            To="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgLeftOver" 
                                            To="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgFiller" 
                                            To="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgFillerOver" 
                                            To="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgRight" 
                                            To="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgRightOver" 
                                            To="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgLeft" 
                                            From="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgLeftOver" 
                                            From="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgFiller" 
                                            From="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgFillerOver" 
                                            From="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgRight" 
                                            From="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgRightOver" 
                                            From="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                            <Setter Property="ToolTipService.IsEnabled" Value="True" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ToggleButton}" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid SnapsToDevicePixels="True" HorizontalAlignment="Center" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="4" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="28" />
                        </Grid.RowDefinitions>
                        <Image x:Name="imgLeft" Grid.Column="0" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceBoxLeft}}" Stretch="Fill" Opacity="{TemplateBinding kd:FrameworkElementExtensions.BackgroundOpacity}" />
                        <Image x:Name="imgLeftOver" Grid.Column="0" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceBoxOverLeft}}" Stretch="Fill" Opacity="0" />
                        <Image x:Name="imgFiller" Grid.Column="1" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceBoxFiller}}" Stretch="Fill"  Width="{Binding ElementName=content, Path=ActualWidth}" Opacity="{TemplateBinding kd:FrameworkElementExtensions.BackgroundOpacity}" />
                        <Image x:Name="imgFillerOver" Grid.Column="1" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceBoxOverFiller}}" Stretch="Fill" Opacity="0"  Width="{Binding ElementName=content, Path=ActualWidth}" />
                        <ContentPresenter Grid.Column="1" x:Name="content" HorizontalAlignment="Center" />
                        <Image x:Name="imgRight" Grid.Column="2" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceBoxRight}}" Stretch="Fill" Opacity="{TemplateBinding kd:FrameworkElementExtensions.BackgroundOpacity}" />
                        <Image x:Name="imgRightOver" Grid.Column="2" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceBoxOverRight}}" Stretch="Fill" Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Name="mouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgLeft" 
                                            To="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgLeftOver" 
                                            To="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgFiller" 
                                            To="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgFillerOver" 
                                            To="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgRight" 
                                            To="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgRightOver" 
                                            To="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgLeft" 
                                            From="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgLeftOver" 
                                            From="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgFiller" 
                                            From="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgFillerOver" 
                                            From="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgRight" 
                                            From="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgRightOver" 
                                            From="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=IsEnabled}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=IsPressed}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="imgLeftOver"  Property="Source" Value="{Binding Source={x:Static kd:StaticImages.ImageSourceBoxDownLeft}}" />
                            <Setter TargetName="imgFillerOver"  Property="Source" Value="{Binding Source={x:Static kd:StaticImages.ImageSourceBoxDownFiller}}" />
                            <Setter TargetName="imgRightOver"  Property="Source" Value="{Binding Source={x:Static kd:StaticImages.ImageSourceBoxDownRight}}" />
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="kd:DragHelper.IsDraggedOver" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Name="dragOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgLeft" 
                                            To="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgLeftOver" 
                                            To="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgFiller" 
                                            To="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgFillerOver" 
                                            To="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgRight" 
                                            To="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgRightOver" 
                                            To="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgLeft" 
                                            From="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgLeftOver" 
                                            From="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgFiller" 
                                            From="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgFillerOver" 
                                            From="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgRight" 
                                            From="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="imgRightOver" 
                                            From="0.5" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SizeButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="ToolTipService.ToolTip" Value="Change current browser size" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceSize}}" Margin="8.5,0,8.5,0" Width="18" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Control.IsEnabled" Value="True" />
                    <Condition Property="Button.IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceSizeDown}}" Margin="8.5,0,8.5,0" Width="18" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Control.IsEnabled" Value="True" />
                    <Condition Property="ToggleButton.IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceSizeActive}}" Margin="8.5,0,8.5,0" Width="18" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToggleListViewButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="ToolTipService.ToolTip" Value="Show list view" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceList}}" Margin="4,0,4,0" Width="27" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Control.IsEnabled" Value="True" />
                    <Condition Property="Button.IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceListDown}}" Margin="4,0,4,0" Width="27" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ToggleButton.IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceThumbs}}" Margin="7,0,7,0" Width="21"  />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ToolTipService.ToolTip" Value="Show tile view" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Control.IsEnabled" Value="True" />
                    <Condition Property="ToggleButton.IsChecked" Value="True" />
                    <Condition Property="Button.IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceThumbsDown}}" Margin="7,0,7,0" Width="21"  />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ShowBookmarksListButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="ToolTipService.ToolTip" Value="Click to select bookmarks." />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceIconBookmark}}" Margin="4,0,4,0" Width="27" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="BackButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="ToolTipService.ToolTip" Value="Move up a directory" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Image x:Name="backButtonImage" Opacity="1" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceBack}}"   
                               Width="30" Margin="2.5,0,2.5,0"                           
                            />
                        <Image x:Name="backButtonImageMouse" Opacity="0" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceBackRollover}}"   
                               Width="30" Margin="2.5,0,2.5,0"          
                            />
                    </Grid>
                    <DataTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="backButtonImage">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                            From="1"  To="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard TargetName="backButtonImageMouse">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                            From="0"  To="1" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="backButtonImage">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                      From="0" To="1" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard TargetName="backButtonImageMouse">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                            From="1"  To="0" Duration="{x:Static kd:AnimationExtensions.kImageRolloverAnimationDuration}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter TargetName="backButtonImageMouse" Property="Source"
                                    Value="{Binding Source={x:Static kd:StaticImages.ImageSourceBackDown}}" 
                                />
                        </Trigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="ToolTipService.ToolTip" Value="Toggle Repeat" />
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceRepeat}}" Margin="5.5,0,5.5,0" Width="24" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Control.IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Control.IsEnabled" Value="True" />
                    <Condition Property="Button.IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceRepeatDown}}"  Margin="5.5,0,5.5,0" Width="24"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Control.IsEnabled" Value="True" />
                    <Condition Property="ToggleButton.IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceRepeatActive}}"  Margin="5.5,0,5.5,0"  Width="24" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ShuffleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="ToolTipService.ToolTip" Value="Toggle Shuffle" />
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceShuffle}}"  Margin="4.5,0,4.5,0" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Control.IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Control.IsEnabled" Value="True" />
                    <Condition Property="Button.IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceShuffleDown}}" Margin="4.5,0,4.5,0" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Control.IsEnabled" Value="True" />
                    <Condition Property="ToggleButton.IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceShuffleActive}}" Margin="4.5,0,4.5,0" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SaveButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="ToolTipService.ToolTip" Value="Save playlist" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceSave}}"  Margin="8,0,8,0" Width="21" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Control.IsEnabled" Value="True" />
                    <Condition Property="Button.IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceSaveDown}}"  Margin="8,0,8,0" Width="21" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DeleteButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="ToolTipService.ToolTip" Value="Delete dragged items (or click to clear playlist)" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceDelete}}"  Margin="8,0,8,0" Width="21" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Control.IsEnabled" Value="True" />
                    <Condition Property="Button.IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceDeleteDown}}" Margin="8,0,8,0" Width="21" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RefreshButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ToolTipService.ToolTip" Value="Refresh" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter Name="content"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceRefreshButton}}" Width="21" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StandbyButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ToolTipService.ToolTip" Value="Put room into standby" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter Name="content"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceStandby}}" Width="22" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Control.IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceStandbyActive}}" Width="22" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Control.IsEnabled" Value="True" />
                    <Condition Property="Button.IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourceStandbyActiveDown}}" Width="22" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="PlayNowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="ToolTipService.ToolTip" Value="Play Now" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourcePlayNow}}" Height="17" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlayNextButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="ToolTipService.ToolTip" Value="Play Next" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourcePlayNext}}"  Height="17" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlayLaterButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="ToolTipService.ToolTip" Value="Play Later" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image x:Name="buttonImage" Source="{Binding Source={x:Static kd:StaticImages.ImageSourcePlayLater}}"  Height="17" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="BreadcrumbArrow">M0,0 L4,3.5 0,7 z</Geometry>


    <Style x:Key="BreadcrumbButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="TabIndex" Value="41" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <StackPanel Orientation="Horizontal" Margin="5,0,5,0">
                        <TextBlock Text="{Binding}" VerticalAlignment="Center" FontSize="{DynamicResource LargeFontSize}" />
                        <Path x:Name="arrow" Fill="{DynamicResource GlyphBrush}"
                            Data="{StaticResource BreadcrumbArrow}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" 
                            Margin="5,2,0,0" IsHitTestVisible="True" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BreadcrumbButtonNoClick" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <StackPanel Orientation="Horizontal" Margin="5,0,5,0">
                        <TextBlock Text="{Binding}" VerticalAlignment="Center" FontSize="{DynamicResource LargeFontSize}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Grid}" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
    </Style>

    <Style x:Key="{x:Type StackPanel}" TargetType="{x:Type StackPanel}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
    </Style>

    <Style x:Key="{x:Type Panel}" TargetType="{x:Type Panel}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
    </Style>

    <Style x:Key="{x:Type DockPanel}" TargetType="{x:Type DockPanel}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
    </Style>

    <Style x:Key="{x:Type WrapPanel}" TargetType="{x:Type WrapPanel}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
    </Style>

    <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
    </Style>

    <Style x:Key="{x:Type Canvas}" TargetType="{x:Type Canvas}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
    </Style>

    <Style x:Key="{x:Type ItemsControl}" TargetType="{x:Type ItemsControl}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
    </Style>

    <Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
    </Style>

    <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="FontSize" Value="{DynamicResource MediumFontSize}" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
        <Setter Property="kd:TextBlockService.AutomaticToolTipEnabled" Value="True" />
        <Style.Triggers>
            <Trigger Property="FrameworkElement.IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="kd:TextBlockService.AutomaticToolTipEnabled" Value="True" />
                    <Condition Property="kd:TextBlockService.IsTextTrimmed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Text}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type Border}" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBorderBrush}"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
    </Style>

    <Style x:Key="{x:Type Rectangle}" TargetType="{x:Type Rectangle}">
        <Setter Property="Stroke" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
    </Style>

    <Style x:Key="{x:Type GridSplitter}" TargetType="{x:Type GridSplitter}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Background" Value="{DynamicResource SolidBorderBrush}"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
    </Style>

    <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
        <Setter Property="Border.Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Visibility" Value="{DynamicResource ToolTipVisibility}" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
    </Style>

    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="FontSize" Value="{DynamicResource MediumFontSize}" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBoxBase">
                    <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">        
        <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
    </Style>

    <Style x:Key="{x:Type kd:ListViewFix}"  TargetType="{x:Type kd:ListViewFix}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
    </Style>
    <Style x:Key="{x:Type ListView}"  TargetType="{x:Type ListView}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
    </Style>
    <Style x:Key="{x:Type Popup}" TargetType="{x:Type Popup}">
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="PopupAnimation" Value="Slide" />
        <Setter Property="StaysOpen" Value="False" />
    </Style>
    <Style x:Key="{x:Type UserControl}" TargetType="{x:Type UserControl}">
        <Setter Property="Focusable" Value="False" />
    </Style>
</ResourceDictionary>