using System;
using System.Drawing;
using System.Windows;
using System.IO;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Interop;

using Linn;

namespace Linn.Toolkit.Wpf
{
    /// <summary>
    /// Interaction logic for CrashLogDumperWindow.xaml
    /// </summary>
    public partial class CrashLogDumperWindow : Window, ICrashLogDumper
    {
        private string iTitle;
        private string iProduct;
        private string iVersion;
        private string iReportText;

        public CrashLogDumperWindow(Icon aIcon, string aTitle, string aProduct, string aVersion)
        {
            MemoryStream iconStream = new MemoryStream();
            aIcon.Save(iconStream);
            iconStream.Seek(0, SeekOrigin.Begin);

            Initialise(BitmapFrame.Create(iconStream), aTitle, aProduct, aVersion);
        }

        public CrashLogDumperWindow(BitmapImage aIcon, string aTitle, string aProduct, string aVersion)
        {
            Initialise(aIcon, aTitle, aProduct, aVersion);
        }

        private void Initialise(ImageSource aIcon, string aTitle, string aProduct, string aVersion)
        {
            InitializeComponent();

            textBlockHeader.Text = aTitle + " has encountered a problem and needs to close. We are sorry for the inconvenience";
            textBlockFooter.Text = "We have created an error report that you can send to help us improve " + aTitle + ".";
            image1.Source = Imaging.CreateBitmapSourceFromHBitmap(Properties.Resources.Error.GetHbitmap(), IntPtr.Zero, Int32Rect.Empty, BitmapSizeOptions.FromEmptyOptions());

            Icon = aIcon;
            Title = aTitle;
            Height = 210;

            iTitle = aTitle;
            iProduct = aProduct;
            iVersion = aVersion;
        }

        public void Dump(CrashLog aCrashLog)
        {
            iReportText = aCrashLog.ToString();

            Dispatcher.Invoke((System.Windows.Forms.MethodInvoker)delegate()
            {
                // show crash form
                textBoxDetails.Text = iReportText;
                ShowDialog();
            });
        }

        private void buttonReport_Click(object sender, RoutedEventArgs e)
        {
            // post data to Linn
            DebugReport report = new DebugReport("Crash log generated by " + iProduct + " ver " + iVersion);
            report.Post(iTitle, iReportText);
            Close();
        }

        private void buttonCancel_Click(object sender, RoutedEventArgs e)
        {
            Close();
        }

        private void buttonDetails_Click(object sender, RoutedEventArgs e)
        {
            if (stackPanelDetails.Visibility == System.Windows.Visibility.Collapsed)
            {
                stackPanelDetails.Visibility = System.Windows.Visibility.Visible;
                Height = 510;
            }
            else
            {
                stackPanelDetails.Visibility = System.Windows.Visibility.Collapsed;
                Height = 210;
            }
        }
    }
}
