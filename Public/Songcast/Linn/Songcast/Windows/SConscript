Import('_default_env kBuildInfo appAssemblyInfo')

# install installer resources

files = Split("""
    ../Resources/Songcast.ico
    Installer/finish.bmp
    Installer/header.bmp
    Installer/NsiTemplate.txt
""")
installerResources = _default_env.Install('$variant_dir/share/Linn/Songcast', files)

# build the driver

buildRootDir = '$build_dir/Linn/Songcast/Windows/'

drivers32  = _default_env.Install(buildRootDir + 'Driver32', 'Driver/songcast.inf')
drivers32 += _default_env.InstallAs(buildRootDir + 'Driver32/songcast.sys', '../../../OpenHome/Windows/ohSongcast32.sys')
drivers32 += _default_env.Install(buildRootDir, '../../../OpenHome/Windows/Install32.exe')
drivers32 += _default_env.Command(buildRootDir + 'Driver32/songcast.cat', buildRootDir + 'Driver32/songcast.sys', ['Inf2Cat /driver:' + buildRootDir + 'Driver32 /os:Vista_X86,7_X86 /v', 'signtool sign /sm /v /a /ac Linn\Songcast\Windows\Driver\gsrootr1.crt /t http://timestamp.verisign.com/scripts/timestamp.dll $TARGET $SOURCE'])

drivers64  = _default_env.Install(buildRootDir + 'Driver64', 'Driver/songcast.inf')
drivers64 += _default_env.InstallAs(buildRootDir + 'Driver64/songcast.sys', '../../../OpenHome/Windows/ohSongcast64.sys')
drivers64 += _default_env.Install(buildRootDir, '../../../OpenHome/Windows/Install64.exe')
drivers64 += _default_env.Command(buildRootDir + 'Driver64/songcast.cat', buildRootDir + 'Driver64/songcast.sys', ['Inf2Cat /driver:' + buildRootDir + 'Driver64 /os:Vista_X64,7_X64 /v', 'signtool sign /sm /v /a /ac Linn\Songcast\Windows\Driver\gsrootr1.crt /t http://timestamp.verisign.com/scripts/timestamp.dll $TARGET $SOURCE'])

# build the main app - this returns a list of all stuff required for the main app i.e. executable, linked assemblies and resource files

app = SConscript('Songcast/SConscript', exports = ['_default_env', 'kBuildInfo', 'appAssemblyInfo'])

# build the preferences app

libs = Split("""
    PresentationCore
    PresentationFramework
    System
    System.Drawing
    System.Windows.Forms
    WindowsBase
""")

ass = _default_env.TagReplace(_default_env.subst('$build_variant_dir/share/Songcast/Preferences/AssemblyInfo.cs'), 'Preferences/Properties/AssemblyInfo.cs', TAGS=kBuildInfo)

files = Split("""
    Preferences/App.xaml
    Preferences/App.xaml.cs
    Preferences/MainWindow.xaml
    Preferences/MainWindow.xaml.cs
""")
	
_default_env['OutputType'] = 'WinExe'
if _default_env['variant'] == 'debug' or _default_env['variant'] == 'trace':
    _default_env['OutputType'] = 'Exe'

msproj = _default_env.MSBuildFileGenerator('SongcastPreferences', files + ass, CLILIBS=libs, LINKS=files + ass, ICON=_default_env.subst('$variant_dir/share/Linn/Songcast/Songcast.ico'), APPLICATIONDEFINITION='App', TOOLSVERSION='4.0', TARGETFRAMEWORKVERSION='3.5')
preferences = _default_env.MSBuildExeBuilder('SongcastPreferences', msproj, CLILIBS=libs)

# build the installer

if _default_env['installers'] and _default_env['hardware'] == 'Windows':
    installer = _default_env.ReleaseInstallerWin32('$install_dir/share/Songcast', 'InstallerSongcast',
                                                    FILES        = {''         : app + preferences,
                                                                    'Driver32' : drivers32,
                                                                    'Driver64' : drivers64},
                                                    TEMPLATE     = _default_env.subst('$variant_dir/share/Linn/Songcast/NsiTemplate.txt'),
                                                    RESOURCES    = {'icon'    : _default_env.subst('$variant_dir/share/Linn/Songcast/Songcast.ico'),
                                                                    'header'  : _default_env.subst('$variant_dir/share/Linn/Songcast/header.bmp'),
                                                                    'finish'  : _default_env.subst('$variant_dir/share/Linn/Songcast/finish.bmp'),
                                                                    'license' : _default_env.subst('$variant_dir/share/Linn/Core/license-cookies.txt')},
                                                    PRODUCT      = 'Songcast',
                                                    VERSION      = kBuildInfo['BUILD_INFO_VERSION'],
                                                    CERT         = '',
                                                    LAUNCHFILE   = 'Songcast.exe')
                                                
Alias('Lib', installerResources)
Alias('Lib', installer)
Alias('Lib', drivers32 + drivers64)

if _default_env['hardware'] == 'Windows':
    resources = [ (_default_env.subst('$install_dir/share/Songcast/InstallerSongcast.exe'), 'InstallerSongcast.exe') ]
    updater = _default_env.CliLibrary('UpdaterSongcast_win', 'Installer/Updater.cs', CLIRESOURCES=resources)
    installed = _default_env.Install('$install_dir/share/Songcast', updater)
    Alias('Lib', installed)
